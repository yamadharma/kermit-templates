#!/bin/bash
# -*- mode: sh -*-

source scripts/include/header
source scripts/include/function

if [[ -f "support/${PROJECT_NAME}/LANG" ]]
then
    MAINLANG=$(cat "support/${PROJECT_NAME}/LANG")
elif [[ -f "support/${PROJECT_NAME}/MAINLANG" ]]
     then
    MAINLANG=$(cat "support/${PROJECT_NAME}/MAINLANG")
else
    MAINLANG=english
fi

if [[ -f "support/${PROJECT_NAME}/ALTLANG" ]]
then
    ALTLANG=$(cat "support/${PROJECT_NAME}/ALTLANG")
else
    case ${MAINLANG} in
	english)
	    ALTLANG=russian
	    ;;
	russian)
	    ALTLANG=english
	    ;;
	*)
	    ALTLANG=russian
	    ;;
    esac
fi

if [[ -f "support/${PROJECT_NAME}/TWOLANG" ]]
then
    LANGLIST=${MAINLANG} ${ALTLANG}
else
    LANGLIST=${MAINLANG}
fi

# For specific project
if [[ -f "scripts/include/project/${PROJECT_NAME}" ]]
then
    source "scripts/include/project/${PROJECT_NAME}"
fi

# {{{ Make preamble

for i in ${LANGLIST}
do
    touch ${out_dir}/${i}.tex
    # mkdir -p ${out_dir}/pre
    cat support/${PROJECT_NAME}/preamble/class/*.tex >> ${out_dir}/${i}.tex
    cat support/${PROJECT_NAME}/preamble/lang/${i}.tex >> ${out_dir}/${i}.tex
    cat support/${PROJECT_NAME}/preamble/pkg/*.tex >> ${out_dir}/${i}.tex
    mkdir -p ${out_dir}/title
    # cp support/${PROJECT_NAME}/title/*.tex ${out_dir}/title/
    
    cp ${i}.bbl ${out_dir}/

    cat ${out_dir}/${i}.tex >> ${out_dir}/text/${out_name}.tex
done

# }}}


# {{{ title

for file in "$@"
do
    # Из head берём только основной язык
    if [[ $file == +(title/*head*) ]]
    then

	clear_all_lang

	cat ./${out_dir}/${MAINLANG}_clean.tex >> ./${out_dir}/${file}
	# cat ./${out_dir}/${ALTLANG}_clean.tex >> ./${out_dir}/text/${out_name}.tex
	
	rm ./${out_dir}/*.tex
	
	shift
	continue
    fi

    # Join all authors
    if [[ $file == +(title/*author*) ]]
    then

	echo $file
	clear_all_lang

	cat ./${out_dir}/${MAINLANG}_clean.tex >> ./${out_dir}/${file%%_*}.tex
	# cat ./${out_dir}/${ALTLANG}_clean.tex >> ./${out_dir}/text/${out_name}.tex
	
	rm ./${out_dir}/*.tex
	
	shift
	continue
    fi

    if [[ $file == +(title/*) ]]
    then


	clear_all_lang
	
	# clear_maintitle
	# clear_alttitle
	
	# Только основной язык
	cat ./${out_dir}/${MAINLANG}_clean.tex >> ./${out_dir}/${file}
	# cat ./${out_dir}/${ALTLANG}_clean.tex >> ./${out_dir}/text/${out_name}.tex
	
	rm ./${out_dir}/*.tex
	
	shift
    fi
done

cp support/${PROJECT_NAME}/title/*.tex ${out_dir}/title/
cat ./${out_dir}/title/*.tex >> ./${out_dir}/text/${out_name}.tex
rm -rvf ./${out_dir}/title

# }}}

# {{{ body

for file in "$@"
do

    clear_all_lang
    
    # Нужен только один язык
    cat ./${out_dir}/${MAINLANG}_clean.tex >> ./${out_dir}/text/${out_name}.tex
    # cat ./${out_dir}/${ALTLANG}_clean.tex >> ./${out_dir}/text/${out_name}.tex
    
    rm ./${out_dir}/*.tex
    
done

clear_comment "${out_dir}/text/${out_name}.tex"

# }}}

# {{{ Make postamble

cat support/${PROJECT_NAME}/preamble/end/* >> ${out_dir}/text/${out_name}.tex

# }}}

# {{{ Project specific hack

project_hack

# }}}

clear_garbage

# {{{ Copy support files

if [[ -d "support/${PROJECT_NAME}/files" ]]
then
    if [[ ! -z `ls support/"${PROJECT_NAME}"/files/` ]]
    then
	cp -R support/"${PROJECT_NAME}"/files/* "${out_dir}"/text/
    fi
fi

# }}}
